---
description:
globs:
alwaysApply: false
---
# CORE-004 기수 상세 관리 페이지 개발 계획

## 프로젝트 개요
[cohort-detail.html](mdc:cohort-detail.html)을 기반으로 한 리액트 기수 상세 관리 페이지 개발

## 주요 목표
- 선택된 기수의 상세 정보 및 실시간 통계 표시
- 기수 관리를 위한 종합 대시보드 구현
- 직관적인 관리 메뉴 및 네비게이션 제공

## 필수 구현 기능

### 1. 기수 상태 정보 섹션
- 기수명, 상태(진행중/완료), 교육 기간 표시
- 진행률 프로그레스 바 및 현재 단계 표시
- 수강생 수 및 조 편성 정보
- 기수 정보 수정 버튼 및 보고서 생성 기능

### 2. 실시간 통계 대시보드
- 4개 주요 지표 카드:
  - 수강생 수
  - 과제 제출 현황
  - 미제출 현황
  - 멘토링 기록 수
- 각 통계 아이콘 및 색상 구분
- 실시간 데이터 업데이트

### 3. 다음 일정 및 빠른 관리 메뉴
- 다음 일정 카드: 중간발표, 현직자 특강 등
- 빠른 관리 메뉴 4개 버튼:
  - 수강생 관리 (student-onboarding.html 연결)
  - 조 관리 (team-management.html 연결)
  - 멘토링 (mentoring-log.html 연결)
  - 프로젝트 (project-system.html 연결)

### 4. 전체 일정 타임라인
- 주차별 일정 카드 레이아웃
- 현재 진행 주차 하이라이트
- 일정 수정 및 내보내기 기능
- 완료/진행중/예정 상태 구분

## Context7 MCP 활용 계획

### 1. React 컴포넌트 아키텍처
- Context7에서 React best practices 및 컴포넌트 설계 패턴 조회
- 상태 관리 라이브러리 선택 및 구현 방법론 확인

### 2. Chart.js 통계 시각화
- Chart.js 라이브러리 활용한 진행률 차트 및 통계 위젯 구현
- 실시간 데이터 업데이트를 위한 React-Chart.js 통합 방법

### 3. Tailwind CSS 스타일링
- Tailwind CSS 유틸리티 클래스를 활용한 반응형 레이아웃
- 기존 HTML 디자인을 React 컴포넌트로 변환하는 최적화 방법

### 4. React Router 네비게이션
- 페이지 간 네비게이션 및 URL 파라미터 처리
- 기수 ID 기반 동적 라우팅 구현

## 개발 단계 계획

### Phase 1: 기본 구조 및 레이아웃
1. React 컴포넌트 구조 설계
2. Tailwind CSS 기반 레이아웃 구현
3. URL 파라미터 기반 기수 정보 로딩
4. 기본 네비게이션 구현

### Phase 2: 상태 관리 및 데이터 연동
1. 기수 데이터 상태 관리 구현
2. 실시간 통계 데이터 바인딩
3. 로컬 스토리지 또는 API 연동 준비
4. 에러 처리 및 로딩 상태 관리

### Phase 3: 인터랙션 및 기능 구현
1. 기수 정보 수정 모달 구현
2. 보고서 생성 기능 구현
3. 일정 수정 및 내보내기 기능
4. 빠른 관리 메뉴 네비게이션 연결

### Phase 4: 차트 및 시각화
1. Chart.js 진행률 차트 구현
2. 통계 카드 애니메이션 효과
3. 일정 타임라인 시각화
4. 반응형 차트 최적화

## 테스트 전략

### 1. 컴포넌트 단위 테스트
- 각 섹션별 컴포넌트 렌더링 테스트
- Props 전달 및 상태 변경 테스트
- 이벤트 핸들러 동작 테스트

### 2. 통합 테스트
- 페이지 네비게이션 플로우 테스트
- 실시간 데이터 업데이트 테스트
- 차트 렌더링 및 데이터 바인딩 테스트

### 3. 사용자 시나리오 테스트
- 기수 선택부터 상세 관리까지 전체 플로우
- 다양한 기수 상태(진행중/완료)에 대한 UI 테스트
- 모바일/태블릿 반응형 테스트

## 성공 기준
- [cohort-detail.html](mdc:cohort-detail.html) 디자인 100% 재현
- 실시간 데이터 업데이트 기능
- 모든 네비게이션 링크 정상 동작
- 반응형 디자인 완벽 구현
- TDD 원칙에 따른 테스트 커버리지 80% 이상

## 참조 문서
- [development-task.mdc](mdc:development-task.mdc): 전체 태스크 목록 및 의존성
- [development-policy.mdc](mdc:development-policy.mdc): TDD 개발 프로세스 준수
- [cohort-detail.html](mdc:cohort-detail.html): UI/UX 참조 및 기능 명세
